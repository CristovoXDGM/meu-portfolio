{"version":3,"sources":["components/navbar.js","components/header.js","components/first-section.js","App.js","serviceWorker.js","index.js"],"names":["NavBarComponent","className","id","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Component","HeaderComponent","FirstSection","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sWAIqBA,E,iLAEb,OACI,yBAAKC,UAAU,sDAAsDC,GAAG,WACpE,yBAAKD,UAAU,aACX,uBAAGA,UAAU,6DAA6DE,KAAK,aAA/E,gBACA,4BAAQF,UAAU,sCAAsCG,KAAK,SAASC,cAAY,WAAWC,cAAY,oBAAoBC,gBAAc,mBAAmBC,gBAAc,QAAQC,aAAW,qBAC3L,0BAAMR,UAAU,yBAEpB,yBAAKA,UAAU,2BAA2BC,GAAG,oBACzC,wBAAID,UAAU,mCACV,wBAAIA,UAAU,YACV,uBAAGA,UAAU,wCAAwCE,KAAK,UAA1D,UAEJ,wBAAIF,UAAU,YACV,uBAAGA,UAAU,wCAAwCE,KAAK,aAA1D,kBAEJ,wBAAIF,UAAU,YACV,uBAAGA,UAAU,wCAAwCE,KAAK,cAA1D,cAEJ,wBAAIF,UAAU,YACV,uBAAGA,UAAU,wCAAwCE,KAAK,YAA1D,qB,GArBaO,aCCxBC,G,4LAEb,OACI,4BAAQV,UAAU,0BACd,yBAAKA,UAAU,kBAEX,yBAAKA,UAAU,mEAGX,yBAAKA,UAAU,4BACX,wBAAIA,UAAU,8CAAd,YACA,6BACA,wBAAIA,UAAU,gDAAd,4BACA,wBAAIA,UAAU,kBAElB,yBAAKA,UAAU,gCACX,uBAAGA,UAAU,+BAAb,kHACA,uWACA,uBAAGA,UAAU,iDAAiDE,KAAK,UAAnE,yB,GAlBiBO,cCDxBE,G,uLAEb,OACI,6BAASX,UAAU,0CAA0CC,GAAG,SAC5D,yBAAKD,UAAU,aACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,wBACX,wBAAIA,UAAU,mBAAd,SACA,wBAAIA,UAAU,uBACd,uBAAGA,UAAU,sBAAb,gCACA,uBAAGA,UAAU,yCAAyCE,KAAK,aAA3D,wB,GAVcO,cCoB3BG,MAjBf,WACE,OAEE,yBAAKZ,UAAU,OACb,0BAAMA,WAAS,EAACC,GAAG,YACjB,kBAAC,EAAD,MACA,kBAAC,EAAD,MAEA,kBAAC,EAAD,SCHYY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.a7e71599.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\n\r\n\r\nexport default class NavBarComponent extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-light fixed-top py-3\" id=\"mainNav\">\r\n                <div className=\"container\">\r\n                    <a className=\"navbar-brand js-scroll-trigger text-black font-weight-bold\" href=\"#page-top\">CRISTOVÃO</a>\r\n                    <button className=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n                        <ul className=\"navbar-nav ml-auto my-2 my-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link js-scroll-trigger text-black\" href=\"#about\">Sobre</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link js-scroll-trigger text-black\" href=\"#services\">Conhecimentos</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link js-scroll-trigger text-black\" href=\"#portfolio\">Portfolio</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link js-scroll-trigger text-black\" href=\"#contact\">Contatos</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n","\r\nimport './header.css';\r\nimport './animat.css';\r\nimport React, { Component } from 'react'\r\n\r\nexport default class HeaderComponent extends Component {\r\n    render() {\r\n        return (\r\n            <header className=\"Master animated fadeIn\">\r\n                <div className=\"TEstando h-100\">\r\n\r\n                    <div className=\"row h-100 align-items-center justify-content-center text-center\">\r\n\r\n\r\n                        <div className=\"col-lg-10 align-self-end\">\r\n                            <h1 className=\"text-uppercase text-black font-weight-bold\">Hello!!!</h1>\r\n                            <br></br>\r\n                            <h1 className=\"text-uppercase text-black font-weight-normal\">I am CRISTOVÃO FARIAS</h1>\r\n                            <hr className=\"divider my-4\" />\r\n                        </div>\r\n                        <div className=\"col-lg-8 align-self-baseline\">\r\n                            <p className=\"text-black font-weight mb-5\">I'm a young Brazilian guy, who loves programming, solve problems through technolgy, play and make videoGames. </p>\r\n                            <p>Living in the state of Alagoas, at the capital in Maceió. My passion for  technology started with my father, he loved to teach about computers, but for him it's was justa hobby, not for me, is more than a hobby. I'm actually working as a programmer at CESMAC Univesity in the Robotics Research Core. I'm open to offers too...</p>\r\n                            <a className=\"btn button btn-xl js-scroll-trigger text-white\" href=\"#about\">More About me</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n","\r\nimport './first-section.css';\r\nimport React, { Component } from 'react'\r\nimport './animat.css';\r\nexport default class FirstSection extends Component {\r\n    render() {\r\n        return (\r\n            <section className=\"page-section bg-primary animated fadeIn\" id=\"about\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-lg-8 text-center\">\r\n                            <h2 className=\"text-white mt-0\">TEste</h2>\r\n                            <hr className=\"divider light my-4\" />\r\n                            <p className=\"text-black-50 mb-4\">Escrever sobre qué eu sou</p>\r\n                            <a className=\"btn btn-light btn-xl js-scroll-trigger\" href=\"#services\">Get Started!</a>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport NavBarComponent from './components/navbar';\nimport HeaderComponent from './components/header';\nimport FirstSection from './components/first-section';\n\n\nfunction App() {\n  return (\n\n    <div className=\"App\" >\n      <body className id='page-top'>\n        <NavBarComponent></NavBarComponent>\n        <HeaderComponent></HeaderComponent>\n\n        <FirstSection></FirstSection>\n\n      </body>\n\n    </div>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}